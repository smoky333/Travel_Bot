import json
import logging # –î–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫

# –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–≥ –±—ã –¥–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π AI.
# –ú—ã –µ–≥–æ –≤–æ–∑—å–º–µ–º –∏–∑ –Ω–∞—à–µ–≥–æ —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞.
# –í–ê–ñ–ù–û: –≠—Ç–æ—Ç JSON –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º! –ü—Ä–æ–≤–µ—Ä—å –µ–≥–æ, –µ—Å–ª–∏ –±—É–¥–µ—à—å –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å.
# –Ø –Ω–µ–º–Ω–æ–≥–æ —Å–æ–∫—Ä–∞—â—É –µ–≥–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –æ—Å—Ç–∞–≤–∏–≤ —Å—É—Ç—å.
SAMPLE_JSON_RESPONSE_STR = """
{
  "query_summary": {
    "location_interpreted": "–ü–∞—Ä–∏–∂, –§—Ä–∞–Ω—Ü–∏—è (–∏–∑ –∑–∞–≥–ª—É—à–∫–∏)",
    "trip_days": 2,
    "main_interests": ["–∏—Å–∫—É—Å—Å—Ç–≤–æ", "–≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è", "–∏—Å—Ç–æ—Ä–∏—è"]
  },
  "recommendations": [
    {
      "id": "route_paris_day1_art_leftbank_stub",
      "type": "route",
      "name": "–ó–∞–≥–ª—É—à–∫–∞: –ò—Å–∫—É—Å—Å—Ç–≤–æ –õ–µ–≤–æ–≥–æ –±–µ—Ä–µ–≥–∞ (–î–µ–Ω—å 1)",
      "address": "–ü–∞—Ä–∏–∂, –õ–µ–≤—ã–π –±–µ—Ä–µ–≥ –°–µ–Ω—ã",
      "coordinates": [48.8567, 2.3265],
      "description": "–ü–µ—à–µ—Ö–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–æ –∑–Ω–∞–∫–æ–≤—ã–º –º–µ—Å—Ç–∞–º –õ–µ–≤–æ–≥–æ –±–µ—Ä–µ–≥–∞ (—ç—Ç–æ –æ—Ç–≤–µ—Ç –∏–∑ –∑–∞–≥–ª—É—à–∫–∏).",
      "details": {
        "route_type": "–ø–µ—à–∏–π",
        "stops": [
          { "name": "–ú—É–∑–µ–π –û—Ä—Å–µ (–∑–∞–≥–ª—É—à–∫–∞)", "coordinates": [48.859961, 2.326556], "description": "–ö–æ–ª–ª–µ–∫—Ü–∏—è –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º–∞." }
        ]
      },
      "distance_or_time": "–ü—Ä–∏–º–µ—Ä–Ω–æ 6 –∫–º, ~5-7 —á–∞—Å–æ–≤",
      "price_estimate": "–ë–∏–ª–µ—Ç—ã: –û—Ä—Å–µ ~16‚Ç¨",
      "rating": 4.9,
      "opening_hours": "–ú—É–∑–µ–∏ –æ–±—ã—á–Ω–æ 9:30 - 18:00",
      "booking_link": null,
      "images": ["https://images.unsplash.com/photo-1505084432426-93049a223726?q=80&w=200&h=150"]
    },
    {
      "id": "hotel_paris_latinquarter_stub",
      "type": "hotel",
      "name": "–ó–∞–≥–ª—É—à–∫–∞: H√¥tel Paris Centre",
      "address": "Rue de Rivoli, 75004 Paris (–∑–∞–≥–ª—É—à–∫–∞)",
      "coordinates": [48.855, 2.354],
      "description": "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π 3 –∑–≤–µ–∑–¥—ã –≤ —Ü–µ–Ω—Ç—Ä–µ (—ç—Ç–æ –æ—Ç–≤–µ—Ç –∏–∑ –∑–∞–≥–ª—É—à–∫–∏).",
      "details": {
        "stars": 3,
        "amenities": ["wifi", "breakfast_included"]
      },
      "distance_or_time": "300 –º –¥–æ –õ—É–≤—Ä–∞",
      "price_estimate": "120‚Ç¨/–Ω–æ—á—å",
      "rating": 4.5,
      "booking_link": "https://booking.example.com/stub",
      "images": ["https://images.unsplash.com/photo-1566073771259-6a8506099945?q=80&w=200&h=150"]
    }
  ]
}
"""

SAMPLE_ACCOMPANYING_TEXT = """
–≠—Ç–æ **–∑–∞–≥–ª—É—à–µ—á–Ω—ã–π** –æ—Ç–≤–µ—Ç –æ—Ç AI! ü§ñ
–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –≤–æ—Ç –ø—Ä–∏–º–µ—Ä–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ü–∞—Ä–∏–∂–∞.
–ö–æ–≥–¥–∞ –º—ã –ø–æ–¥–∫–ª—é—á–∏–º –Ω–∞—Å—Ç–æ—è—â–∏–π AI, –∑–¥–µ—Å—å –±—É–¥–µ—Ç –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω!
"""

async def get_travel_recommendations(user_data: dict) -> tuple[dict | None, str | None]:
    """
    –ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ—Ç AI.
    –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º—Ç–∞ –∏ –≤—ã–∑–æ–≤ LLM API.
    –ü–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞—Ä–∞–Ω–µ–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∑–∞–≥–ª—É—à–∫—É).

    :param user_data: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏, —Å–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :return: –ö–æ—Ä—Ç–µ–∂ (—Å–ª–æ–≤–∞—Ä—å_—Å_JSON_—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ | None, —Ç–µ–∫—Å—Ç–æ–≤–æ–µ_—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ | None)
    """
    logging.info(f"AI Integration: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–≥–ª—É—à–∫–∏: {user_data}")

    # TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ user_data

    # –ü—Ä–æ—Å—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É, –∫–∞–∫ –±—É–¥—Ç–æ AI –¥—É–º–∞–µ—Ç
    # import asyncio # –ï—Å–ª–∏ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å asyncio.sleep
    # await asyncio.sleep(2) # –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ 2 —Å–µ–∫—É–Ω–¥—ã

    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞—à—É —Å—Ç—Ä–æ–∫—É —Å JSON –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π Python —Å–ª–æ–≤–∞—Ä—å
        recommendations_json = json.loads(SAMPLE_JSON_RESPONSE_STR)
        accompanying_text = SAMPLE_ACCOMPANYING_TEXT

        logging.info("AI Integration: –ó–∞–≥–ª—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∞ –¥–∞–Ω–Ω—ã–µ.")
        return recommendations_json, accompanying_text
    except json.JSONDecodeError as e:
        logging.error(f"AI Integration: –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –∏–∑ –∑–∞–≥–ª—É—à–∫–∏: {e}")
        return None, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏–º–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç AI."
    except Exception as e:
        logging.error(f"AI Integration: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –∑–∞–≥–ª—É—à–∫–µ: {e}")
        return None, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ AI (–∑–∞–≥–ª—É—à–∫–∞)."